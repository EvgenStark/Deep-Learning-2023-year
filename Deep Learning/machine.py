import numpy as np

# веса 1
weight1 = np.array([[1.59808759e-01, -4.11650868e-01, -4.37937757e-01,
                     -2.77595300e-02, -7.26086948e-01, -5.07071297e-02,
                     -3.89411953e-01, -2.37220158e-01, 2.35736259e-01,
                     2.78609613e-01, -2.83059927e-01, 3.27533561e-01,
                     -3.77193681e-01, -2.86306017e-01, 1.44348562e-01,
                     4.91574891e-01, -1.57059907e-02, -1.23804068e-01,
                     -2.25627089e-01, 5.88069937e-01],
                    [7.37526456e-01, 2.19732047e-01, -1.88420445e-01,
                     -2.41687967e-01, 6.40270994e-01, -1.31847071e+00,
                     -4.59883524e-01, 1.75180907e-01, -2.82624868e-02,
                     5.97609041e-02, -1.10980167e-01, 5.41866388e-01,
                     6.33934823e-01, -1.20435053e-01, 7.74001791e-01,
                     -3.39976947e-01, -7.08968725e-02, -3.25550072e-01,
                     -2.42903787e-01, -4.49531852e-01],
                    [5.16917417e-02, 1.30028326e-01, 3.07430080e-01,
                     -4.23652608e-01, -4.11783007e-02, 7.84687599e-01,
                     -2.61614495e-01, -3.33604959e-01, 5.69721739e-01,
                     2.70321811e-01, 3.76933167e-02, 1.18622336e-01,
                     6.03872188e-02, -2.43858485e-02, -6.76729774e-02,
                     -4.63664589e-01, -3.44992963e-01, 4.77104525e-01,
                     -3.32168760e-01, -1.64096896e-01],
                    [-2.09540943e-01, -4.73878453e-01, 4.23869571e-01,
                     3.41091993e-01, 3.05341022e-01, -6.02933146e-02,
                     4.72092150e-02, 2.03607039e-02, 5.67669788e-04,
                     -6.02988686e-02, 1.42909857e-03, 1.62423493e-02,
                     1.49091284e-01, 2.61381290e-01, 2.98531736e-01,
                     5.13102588e-01, -4.19392263e-01, -4.18258662e-01,
                     3.12505821e-01, -1.18625434e-01]])

b1 = np.array([[-1.80823218, -0.04424264, 0.10592355, -0.43925646, -0.2229731,
                -0.25001076, 0.08925609, -0.43231873, 0.02762487, 0.53114678,
                0.51812083, -2.22748877, 0.96568792, -0.31254799, -1.15028308,
                0.08237512, -0.14275949, -0.33174177, -0.42259125, 1.95544914]])

# веса 2
weight2 = np.array([[1.1250226, 0.29724876, -1.34485164],
                    [-0.43815939, 0.18397816, 0.18996544],
                    [-0.12710732, -0.20642029, 0.36181411],
                    [-0.17587828, -0.01971198, 0.21391232],
                    [-0.14628367, 0.69227165, -0.10366649],
                    [-0.83411045, 1.00966065, -0.431958],
                    [-0.20659355, 0.1599197, 0.04602279],
                    [0.00572372, 0.02289857, -0.11967392],
                    [0.07119818, -0.37081767, 0.18150745],
                    [-0.39199548, -0.13608226, 0.35942489],
                    [0.11179828, -0.14237749, 0.10331699],
                    [1.54016647, 0.04374041, -1.49918255],
                    [-0.80628055, 0.34593959, 0.50907161],
                    [-0.08432262, -0.00339831, 0.15696288],
                    [0.75882336, 0.24067942, -1.02963773],
                    [0.03481163, -0.49875461, 0.43006605],
                    [0.2007473, 0.0036291, 0.16922497],
                    [-0.00615823, 0.44240785, -0.35884675],
                    [-0.12398796, -0.21699119, 0.17736372],
                    [-1.48136629, 0.46119848, 1.27277987]])

b2 = np.array([[-1.5415865, -0.02884268, 1.51409619]])


# функция линейной активации
def relu(t):
    return np.maximum(t, 0)


# функция распределения вероятностей
def softmax(x):
    return np.exp(x) / np.sum(np.exp(x))


# функция прогноз оценки
def predict(x):
    return softmax(relu(x @ weight1 + b1) @ weight2 + b2)


def main(n1, n2, n3, n4):
    my_data = np.array([n1, n2, n3, n4])
    predict_value = predict(my_data)
    print(predict_value)
    prediction_class = np.argmax(predict_value)
    estimation = ['отлично (5)', 'хорошо (4)', 'удовлетворительно']
    return estimation[prediction_class]